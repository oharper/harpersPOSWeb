@model harpersPOS.Models.Event

@{
    ViewBag.Title = "Create Event";
}

<h2>Create Event</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Event Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, "Event Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tabs, "Enable Bar Tabs?", htmlAttributes: new {  @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" new { onchange = "tabsValueChanged()" }>
                    @Html.EditorFor(model => model.Tabs, new { htmlAttributes = new { @id = "Tabs" } })
                    @Html.ValidationMessageFor(model => model.Tabs, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CashLimit, "Event Cash Limit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CashLimit, new { htmlAttributes = new { @class = "form-control", @id = "CashLimit" } })
                @Html.ValidationMessageFor(model => model.CashLimit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeLimit, "Event Time Limit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeLimit, new { htmlAttributes = new { @class = "form-control", @id = "TimeLimit" } })
                @Html.ValidationMessageFor(model => model.TimeLimit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")




<script type="text/javascript">
    function tabsValueChanged() {

        if (document.getElementById("Tabs").checked) {
            document.getElementById("TimeLimit").setAttribute("disabled", "disabled");
            document.getElementById("CashLimit").setAttribute("disabled", "disabled");
        } else {
            document.getElementById("TimeLimit").removeAttribute("disabled");
            document.getElementById("CashLimit").removeAttribute("disabled");
        }
    }
</script>



}
